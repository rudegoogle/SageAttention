

name: Build SageAttention Wheels for Windows CUDA 12.9 Pytorch 2.8

on:
  workflow_dispatch:  # Allows manual triggering


jobs:
  build-wheels:
    runs-on: windows-latest  # Use Windows runner for compatibility
    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python 3.13
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      # Install CUDA 12.9
      - name: Install CUDA Toolkit
        uses: N-Storm/cuda-toolkit@v0.2.27m #Jimver/cuda-toolkit@v0.2.24
        with:
          cuda: '12.9.0'
          #method: 'network'
          #sub-packages: '["nvcc", "cudart", "libcublas"]'  # Include necessary CUDA components
          use-github-cache: false  # Disable caching to avoid path error
          #use-local-cache: false  # Disable caching to avoid path error


      # Install Visual Studio Build Tools for C++ compilation
      - name: Install Visual Studio Build Tools
        run: |
          choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64"
        shell: powershell

      # Install PyTorch 2.8.0 with CUDA 12.9
      - name: Install PyTorch
        run: |
          pip install torch==2.8.0+cu129 torchvision==0.23.0+cu129 --index-url https://download.pytorch.org/whl/cu129
        shell: cmd

      # Install Triton and wheel-building dependencies
      - name: Install Triton and Build Tools
      #  run: |
      #    pip install triton>=3.0.0 wheel setuptools
        run: |
          pip install wheel setuptools packaging
        shell: cmd

      - name: Locate VS Build Tools
        id: vs
        shell: pwsh
        run: |
           $path = & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
           echo "VSINSTALLDIR=$path" | Out-File -FilePath $env:GITHUB_ENV -Append

      # Build SageAttention wheel
      - name: Build SageAttention Wheel
        #run: |
        #  python setup.py bdist_wheel
        #shell: cmd
        shell: cmd
        run: |
          call "%VSINSTALLDIR%\VC\Auxiliary\Build\vcvars64.bat"
          python setup.py bdist_wheel 
        working-directory: ./

      # List generated wheels
      - name: List Wheels
        run: |
          dir dist
        shell: cmd

      # Upload wheels as artifacts
      - name: Upload Wheels
        uses: actions/upload-artifact@v4
        with:
          name: sageattention-wheels
          path: dist/*.whl

      # Verify installations 
      # python -c "import triton; print(triton.__version__)"
      #pip install dist/*.whl
      #python -c "import sageattention; print('SageAttention imported successfully')"
      - name: Verify Installations
        run: |
          nvcc --version
          python -c "import torch; print(torch.__version__, torch.cuda.is_available())"
        shell: cmd

      # Optional: Run CogVideoX example
      # name: Run CogVideoX Example
      #  run: |
      #    cd example
      #    python cogvideox-2b.py --compile --attention_type sage
      #  shell: cmd
      #  env:
      #    CUDA_LAUNCH_BLOCKING: 1
      #  continue-on-error: true  # Example may require additional setup
